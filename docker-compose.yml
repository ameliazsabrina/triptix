version: "3.8"

services:
  frontend:
    build:
      context: ../fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_GOOGLE_MAP_KEY=AIzaSyAyh4foZcK_Kcmv8w-yhH0tsJk1XZGu9cU
      - NEXT_PUBLIC_GEMINI_API_KEY=AIzaSyB91q6_m5LJlGpH4-TuS1NRS4rqFDkD_Lw
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
    volumes:
      - ../fe:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - app

  app:
    build:
      context: ../be
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_USER=postgres
      - DB_HOST=db
      - DB_DATABASE=triptix
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GOOGLE_MAP_KEY=${GOOGLE_MAP_KEY}
    volumes:
      - ../be:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=triptix
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres_data:
